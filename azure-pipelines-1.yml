# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: 'Coles-Private-Hosted-Linux-NonProd-Scalable'

# - task: TerraformInstaller@1
#   inputs:
#     terraformVersion: 'latest'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'adf test'
    backendAzureRmResourceGroupName: 'RG_SUPPLYCHAIN_LABPLANTRANSFORM_ADF_DEV_AUE'
    backendAzureRmStorageAccountName: 'storageadfaue'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'adf test'
    commandOptions: '-var-file=environment/dev.tfvars -detailed-exitcode -out=$(System.DefaultWorkingDirectory)/tfadf.plan'



- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '$(System.DefaultWorkingDirectory)/tfadf.plan'
    environmentServiceNameAzureRM: 'adf test'